---
import qs from "qs";
import Announce from "../../components/Announce.astro";
import BlogRoot from "../../components/Blog/BlogRoot.astro";
import DeadlineRoot from "../../components/Deadlines/DeadlineRoot.astro";
import StageWorkRoot from "../../components/StagesWorks/StageWorkRoot.astro";
import Layout from "../../layout.astro";
import SpriteFeature from "../../SpriteFeature.astro";
import YandexWidget from "../../components/YandexWidget.astro";
import SEOBlock from "../../components/SEOBlock.astro";
import Footer from "../../components/Footer.astro";
import HeroPackage from "../../components/Hero/Package.astro";
import BlockText from "../../components/BlockText.astro";
import ReadyWorks from "../../components/ReadyWorks.astro";
import ConstructionLinks from "../../components/ConstructionLinks.astro";
import SpriteConstructions from "../../SpriteConstructions.astro";
import SubscribeBlock from "../../components/SubscribeBlock.astro";
import AccordeonCards from "../../components/AccordeonBlock/AccordeonCards.astro";
import OneHero from "../../components/OneHero.astro";

export function getStaticPaths() {
  return [
    { params: { slug: "krishka-dno" }},
    { params: { slug: "magnet-print" }},
    { params: { slug: "penal" }},
    { params: { slug: "transformer" }},
    { params: { slug: "advent" }},
    { params: { slug: "board-game" }},
    { params: { slug: "suitcase" }},
    { params: { slug: "books" }},
    { params: { slug: "paper-bags" }},
    { params: { slug: "cardboard" }},
  ];
}

const { slug } = Astro.params;

const paramsPage = {
    filters: {
        slug: {
            $eq: slug
        }
    },
    populate: {
        Banner: {
            populate: "*"
        },
        readyProjects: {
            populate: "*"
        },
        descriptions: {
            populate: "*"
        },
        cardsSection: {
            populate: "*"
        },
        SEO: {
            populate: "*"
        },
        filterConstructions: {
            populate: "*"
        }
	},
    SVGSprite: {
        populate: "*"
    },
};

const queryStringPage = qs.stringify(paramsPage, { encode: true });
const landingPageData = await fetch(`${import.meta.env.HOST_API}/constructions/?${queryStringPage}`).then(res => res.json());
const pageData = landingPageData?.data[0];
---
<code>
<!-- {JSON.stringify(queryStringPage)} -->
    
</code>
<Layout title={pageData.title}>
    <div class="content-grid">    
            <OneHero {...pageData}  />
            <ConstructionLinks {slug} {...pageData} />
            <Announce maxWidthBlock="58rem" widthMark="14px" heightMark="90px" colorMark="var(--color-orange)" marginBlock="0 0 0 clamp(0rem, -13.2857rem + 21.4286vw, 6rem)"  text={pageData.announce} />
            <ReadyWorks {...pageData?.readyProjects} />
            <div class="fab-widgets">
                {
                    pageData?.descriptions.map( b => <>
                        <BlockText {...b} />
                    </>)
                }
            </div>
            {
                pageData?.cardsSection.map( (accordeon, num) => <AccordeonCards {...accordeon} {num} /> )
            }
            <DeadlineRoot />
            <StageWorkRoot />
            <SubscribeBlock status="default" />
            <SEOBlock {...pageData?.SEO} />


</div>
            <div set:html={pageData?.SVGSprite}></div>
</Layout>


<style lang="scss" is:global>
	.fab-widgets {
		display: flex;
		flex-direction: column;
		row-gap: 2rem;
		@media (min-width: 992px) {
			display: grid;
			grid-template-columns: 1fr 1fr;
			gap: var(--global-gap);
		}
	}
    .fab-announce {
        margin: 0 auto!important;
        max-width: 34rem!important;
    }
    .fab-announce h2 {
        font-size: 1.5rem;
        line-height: 1.5;
    }
</style>