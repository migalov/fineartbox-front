---
import CustomGrid from "../components/CustomGrid.astro";
import Layout from "../layout.astro";
import ReadyWorks from "../components/ReadyWorks.astro";
import qs from "qs";
import Icon from "../components/Icon.astro";
import PortfolioSprite from "../sprites/PortfolioSprite.astro";
import ButtonDefault from "../components/Button/ButtonDefault.astro";
import SEOBlock from "../components/SEOBlock.astro";
import SubscribeBlock from "../components/SubscribeBlock.astro";

export async function getStaticPaths() {
  const response = await fetch(`${import.meta.env.HOST_API}/packages?populate=*`);
  const data = await response.json();

  return data?.data?.map((card) => {
    let slug = card?.href?.replace("https://fineartbox.ru/", "") ? card?.href.replace("https://fineartbox.ru/", "") : ""
    if (slug) 
      return {
        params: {slug: slug},
        props: { card }
      };
  });
}

const { slug } = Astro.props;
const { card } = Astro.props;

const response1 = await fetch(`${import.meta.env.HOST_API}/packages?populate=*`);
const data1 = await response1.json();
---

<Layout title={card?.title}>
    <div class="fab-page">
        <div class="content-grid">

              <div class="fab-product-portfolio" style="--position: 1; --count:;">
                  <div class="fab-product-portfolio-left">
                      <div class="splide fab-product-portfolio-preview" aria-labelledby="carousel-heading" id="main-slider">
                      <div class="splide__track">
                          <ul class="splide__list">
                            {
                              card?.previews?.map( item => 
                                <>
                                  <li class="splide__slide"><img src={`${import.meta.env.HOST}${item.url}`} /></li>
                                </>
                              )
                            }
                          </ul>
                      </div>
                      </div>
                  </div>
                  <div class="fab-product-portfolio-right">
                      <div class="splide  fab-product-portfolio-thumbs" aria-labelledby="carousel-heading" id="thumbnail-slider">
                          <div class="splide__track">
                              <ul class="splide__list">
                              {
                                card?.previews?.map( item => 
                                  <>
                                    <li class="splide__slide"><img src={`${import.meta.env.HOST}${item.url}`} /></li>
                                  </>
                                )
                              }
                              </ul>
                          </div>
                          <div class="splide__arrows">
                              <button class="splide__arrow splide__arrow--prev">
                                  <Icon id="arrow-slider" width="20" height="40" />
                              </button>
                              <button class="splide__arrow splide__arrow--next">
                                  <Icon id="arrow-slider" width="20" height="40" />
                              </button>
                          </div>
                      </div>
                      <!-- <div class="fab-custom-scrollbar">
                        <div class="fab-custom-scrollbar__thumb"></div>
                      </div> -->
                  </div>
              </div>

            
            <CustomGrid columns="2" classes={"fab-product-portfolio-buttons"}>
                <div>
                    <ButtonDefault tag="a" href="tel:+74952150977" reverse="true">
                      <svg xmlns="http://www.w3.org/2000/svg" width="25" height="24" viewBox="0 0 25 24" fill="none" " id="phone">
                        <g opacity="0.6">
                            <path d="M19.5 0C20.6046 0 21.5 0.895431 21.5 2V22C21.5 23.1046 20.6046 24 19.5 24H5.5C4.39543 24 3.5 23.1046 3.5 22V2C3.5 0.895431 4.39543 8.05332e-09 5.5 0H19.5ZM6.5 2C5.94772 2 5.5 2.44772 5.5 3V21C5.5 21.5523 5.94772 22 6.5 22H18.5C19.0523 22 19.5 21.5523 19.5 21V3C19.5 2.44772 19.0523 2 18.5 2H6.5ZM9.44141 4C9.74109 4.00014 10.0184 4.1483 10.1855 4.39062L10.3145 4.60938C10.4816 4.8517 10.7589 4.99986 11.0586 5H13.9414C14.2411 4.99986 14.5184 4.8517 14.6855 4.60938L14.8145 4.39062C14.9816 4.1483 15.2589 4.00014 15.5586 4H16.5C17.0523 4 17.5 4.44772 17.5 5V19C17.5 19.5523 17.0523 20 16.5 20H8.5C7.94772 20 7.5 19.5523 7.5 19V5C7.5 4.44772 7.94772 4 8.5 4H9.44141Z" fill="var(--color-orange)"/>
                        </g>
                      </svg>
                      &nbsp;&nbsp;
                      <span>Заказать через менеджера</span> 
                    </ButtonDefault>
                </div>
                <div>
                  <script data-b24-form="click/64/gaf2nv" data-skip-moving="true" is:inline>(function(w,d,u){var s=d.createElement('script');s.async=true;s.src=u+'?'+(Date.now()/180000|0);var h=d.getElementsByTagName('script')[0];h.parentNode.insertBefore(s,h);})(window,document,'https://cdn-ru.bitrix24.ru/b13109976/crm/form/loader_64.js');</script>
                    <ButtonDefault tag="button">
                      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" id="plus">
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M12 0C18.6274 0 24 5.37258 24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0ZM10.5 5V10.5H5V13.5H10.5V19H13.5V13.5H19V10.5H13.5V5H10.5Z" fill="white"/>
                    </svg>
                      &nbsp;&nbsp;
                      Оставить заявку
                    </ButtonDefault>
                </div>
                
                
            </CustomGrid>

            <section>
                <h1>{card?.title}</h1>
                <CustomGrid columns="2">
                    <div set:html={card?.description?.columnOne}></div>
                    <div set:html={card?.description?.columnTwo}></div>
                </CustomGrid>
                <CustomGrid columns="2">
                    <div>
                        <h2>Процесс изготовления</h2>
                        <p>Производство коробок крышка-дно включает в себя несколько ключевых этапов. Изготовление начинается с создания проекта.</p>
                        <p>Вы можете воспользоваться одним из стандартных вариантов формы и размера и добавить свою декоративную обработку, или продумать дизайн с нуля, получив нечто совершенно новое, в корпоративном стиле. Чтобы убедиться, что результат соответствует первоначальному плану, типография может подготовить прототип.</p>
                        <p>Следующим этапом является выбор материала — обычно используют плотный картон или дизайнерскую бумагу, в зависимости от назначения коробки и желаемого визуального эффекта. Затем проводится вырубка: на специальном оборудовании листы картона нарезаются по заданному шаблону, включая элементы крышки и донышка. После этого детали проходят процесс биговки — нанесения линий сгиба, благодаря которым коробка легко и аккуратно собирается.</p>
                        <p>На этапе печати и отделки применяется множество техник: тиснение, ламинация, выборочный лак, фольгирование и другие виды декоративной обработки. Это придаёт коробке уникальность и повышает её привлекательность. Далее следует ручная или автоматизированная сборка, после чего изделия упаковываются и подготавливаются к отправке заказчику. Таким образом, производство коробок крышка-дно — это комплексный процесс, сочетающий технологии, дизайн и внимание к деталям.</p>
                    </div>
                    <div>
                        <h2>Конструкция в чертеже</h2>
                        {
                          card?.drawing?.url && <img src={`${import.meta.env.HOST}${card?.drawing?.url}`} />
                        }
                        {
                          !card?.drawing?.url && <img src={`/img/empty-image.jpg`} />
                        }
                        <div set:html={card?.aboutDrawing}>

                        </div>
                    </div>
                </CustomGrid>
            </section>
            {
              card?.packages?.length > 0 && 
                <section>
                    <h2>Реализованные работы</h2>
                    {
                        <ReadyWorks packages={card?.packages} />
                    }
                </section>
            }
            <SubscribeBlock />
            {card?.SEOBlock?.oneColumn && <SEOBlock {...card.SEOBlock} />}
        </div>
    </div>
    <PortfolioSprite />

    <style lang="scss " is:global>
      .fab-product-portfolio-buttons div:first-child :is(a, button):hover svg path {
        fill: var(--color-white);
      }
      .fab-product-portfolio-buttons div:last-child :is(a, button):hover svg path {
        fill: var(--color-orange);
      }
        /* General Splide Styling */
    .splide {
    margin: 0 auto;
    }

    :is(.fab-product-portfolio-preview, .fab-product-portfolio-thumbs) img {
      height: 100%;
    }

.splide__slide {
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 24px;
  font-weight: bold;
  color: #fff;
  background-size: cover;
  background-position: center;
}

.splide__arrow {
    background: transparent;
}

#main-slider {
  height: 100%;
  margin-bottom: 20px; /* Space between main slider and thumbnails */
}

#main-slider .splide__slide {
  height: 100%; /* Larger height for main slider */
  font-size: 28px; /* Larger font for main slider */
}

#main-slider .splide__track {
  height: 100%;
}

#thumbnail-slider {
    /* height: auto!important; */
    @media (min-width: 768px) {
    height: auto ;
    }
  
}

#thumbnail-slider .splide__slide {
  height: 100px; /* Smaller thumbnails */
  font-size: 16px;
  margin: 0;
  border: 0;
}

.fab-product-portfolio {
  width: 100%;
  height: min(50vh, 640px);
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  gap: 20px;
  @media (min-width: 768px) {
      display: grid;
      grid-template-columns: 5fr 1fr;
  }
}
.fab-product-portfolio .fab-product-portfolio-left {
  width: 100%;
  overflow: hidden;
  flex: 1;
}

.fab-product-portfolio .fab-product-portfolio-right {
  width: 100%;
  margin-left: auto
  overflow: hidden;

}

.fab-product-portfolio-thumbs {
  display: none;
    @media (min-width: 768px) {
      display: block;
    }
}


/* .fab-custom-scrollbar {
  --position-scroll: calc((var(--position) - 1) * (100% / var(--count)));
  position: relative;
  height: 4px;
  background-color: var(--color-gray-1);
  @media (min-width: 768px) {
    display: none;
  }
}

.fab-custom-scrollbar__thumb {
  transition: var(--transition-default);
  position: absolute;
  bottom: 0;
  background-color: var(--color-gray-2);
  width: calc(100% / var(--count));
  left: var(--position-scroll);
  height: 8px;
  clip-path: polygon(5px 0%, 100% 0,calc(100% - 5px) 100%, 0 100%);
} */

/* Main slider styling */
#main-slider {
  width: 100%; /* Adjust width as needed */
  height: 100%;
}

/* Vertical thumbnail slider styling */
#thumbnail-slider {
  width: 100%; /* Adjust width as needed */
  height: 100%; /* Full height for vertical layout */
  overflow: hidden; /* Prevent overflowing slides */
}

#thumbnail-slider .splide__list {
  display: flex;
  @media (min-width: 768px) {
  flex-direction: column;
  }
 /* Make the slides stack vertically */
}

#thumbnail-slider .splide__slide {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 14px;
    font-weight: bold;
    color: #fff;
    height: 100px; /* Adjust thumbnail height */
    background-repeat: no-repeat;
    background-size: cover;
    opacity: .5;
    overflow: hidden;

    &::before, &::after {
        content: "";
        position: absolute;
        width: 0px;
        height: 0px;
        border-style: solid;
        transform: rotate(0deg);
        left: 0px;
        transition: var(--transition-default);
    }
    &::before {
        border-width: 1rem 0 1rem 1rem;
        border-color: transparent transparent transparent transparent;
    }
    &::after {
        border-width: .75rem 0 .75rem .75rem;
        border-color: transparent transparent transparent transparent;
    }
}

#thumbnail-slider .splide__slide.is-active {

  background-color: #fff;
  color: #007bff;
  opacity: 1;
  border-color: transparent;
  /* clip-path: polygon(100% 0, 100% 100%, 0 100%, 0 calc(50% + 1rem), 1rem 50%, 0 calc(50% - 1rem), 0 0); */
  &::before, &::after {
    content: "";
    position: absolute;
    width: 0px;
    height: 0px;
    border-style: solid;
    transform: rotate(0deg);
    left: 0px;
  }
  &::before {
    border-width: 1rem 0 1rem 1rem;
    border-color: transparent transparent transparent var(--color-white);
  }
  &::after {
    border-width: .75rem 0 .75rem .75rem;
    border-color: transparent transparent transparent var(--color-orange);
  }
}
    </style>
    <script src="./splide.min.js" is:inline></script>
    <script src="../splide.min.js" is:inline></script>
    <script>
        var main = new Splide("#main-slider", {
              type: "fade",
              pagination: false,
              arrows: false,
              cover: false
            });

            var thumbnails = new Splide("#thumbnail-slider", {
            type: 'slide',
            pagination: false,
            isNavigation: true,
            height: "100%",
            perPage: 1,
            perMove: 1,
            wheel: true,
            mediaQuery: "min",
            fixedHeight: `6rem`,
            gap: `1rem`,
            cover: false,
            breakpoints: {
                0: {
                    fixedWidth: `20%`,
                    destroy: true
                },
                768: {
                    direction: "ttb",
                    fixedHeight: `20%`,
                    dragMinThreshold: "",
                    fixedWidth: `100%`,
                    destroy: false
                }
                
            }
        });

        main.sync(thumbnails);
        main.mount();
        thumbnails.mount();
        // document.querySelector(".fab-product-portfolio").style.setProperty("--count", main.length);

        // main.on("move", function (e) {
        //   document.querySelector(".fab-product-portfolio").style.setProperty("--position", e + 1);
        // });
    </script>

    <script>
      // Функция, которая будет вызываться после загрузки формы
      function onFormLoaded() {
          console.log("Форма загружена!");
          // Здесь вы можете добавить свой код для обработки события
          document.querySelectorAll(".b24-form-control-label").forEach(el => {
              let input = el.previousSibling?.parentNode.children[0];
              if (el.innerText.includes("Название страницы")) {
                input.value = `${document.title}`;
                console.log(input);
                input.value = document.title;
                // input.value(document.title);
                
                
                // input?.closest(".b24-form-field").style.display = 'none';
              }
              if (el.innerText.includes("Сайт")) {
                input.value = document.location.href;
              }
              if (el.innerText.includes("Название страницы") || (el.innerText.includes("Сайт"))) {
                // input.closest(".b24-form-field").style.display = 'none';
              }
          })
          
      }

// Настройки для наблюдателя
const config = { childList: true, subtree: true };

// Создаем экземпляр MutationObserver
const observer = new MutationObserver((mutationsList) => {
    for (let mutation of mutationsList) {
        if (mutation.type === 'childList') {
            // Проверяем, появилась ли форма
            const form = document.querySelector('.b24-form-wrapper'); // Замените на селектор вашей формы
            if (form) {
                onFormLoaded(); // Вызываем функцию при загрузке формы
                observer.disconnect(); // Отключаем наблюдателя, если форма найдена
                break;
            }
        }
    }
});

// Начинаем наблюдение за изменениями в документе
observer.observe(document.body, config);
</script>
</Layout>
    