---
import cleanHtml from "../../scripts/cleanHtml";
import insertNbspAfterPrepositions from "../../scripts/testwords";
import replaceSpacesAfterPrepositions from "../../scripts/words";

const { src, title, label, srcAlternative, description, classesImage, srcFoil, availableFoil} = Astro.props;
---

<div class="fab-card">
    {
        !availableFoil && <img class:list={[classesImage]} data-card-src={src ? src : srcAlternative} alt="" />
    }
    {
        availableFoil && <img class="fab-card-foil" data-card-src={srcFoil} alt="" />
    }
    
    
    <div class="cb-card-wrap" set:html={insertNbspAfterPrepositions(cleanHtml(description))}>
        {
            label && <h3>{label}</h3>
        }
        {
            (!label && title) && <h3>{title}</h3>
        }
    </div>
</div>

<style lang="scss" is:global>
    .fab-card {
        // width: clamp(12.5rem, 11.3571rem + 5.7143vw, 16.5rem);
        scroll-snap-align: start;
        display: flex;
        flex-direction: column;
                background-color: var(--color-gray-2);
        & h3 {
            font-size: var(--size-h3);
        }

        & p {

        }

        & :is(h3, p) {
            color: var(--color-black);
        }

        & img {
            display: block;
            // aspect-ratio: 1/1;
            object-fit: cover;

            &:not([src]) {
                flex: 1;

            }
            &.fab-card-foil {
                border-radius: 999px;
                transform: scale(.6);
            }
        }
        @media (max-width: 991.99px) {
            // min-width: clamp(12.5rem, 11.3571rem + 5.7143vw, 16.5rem);
        }
    }

    .cb-card-wrap {
        display: flex;
        flex-direction: column;
        row-gap: 1rem;
        flex: 1;
        padding: clamp(1rem, 0.4286rem + 1.1905vw, 1.5rem)!important;
        border: 1px solid var(--color-gray-2);
        background-color: var(--color-white);
    }
</style>