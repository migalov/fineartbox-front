---
import Icon from "./Icon.astro";
const {slug, filterConstructions} = Astro.props;
const constructionsLinksData = [
    {
        idIcon: "",
        label: "Стандартная",
        href: "krishka-dno"
    },
    {
        idIcon: "",
        label: "С вырезом <br />под палец",
        href: "#"
    },
    {
        idIcon: "",
        label: "С бортом",
        href: "#"
    },
    {
        idIcon: "",
        label: "С наклонными <br />бортами",
        href: "#"
    },
    {
        idIcon: "",
        label: "С объёмным <br />бортом",
        href: "#"
    },
    {
        idIcon: "",
        label: "С накладками",
        href: "#"
    }
]
---

<section class="constructions-switch">
    <h2>Виды конструкций</h2>
    <div class="constructions-switch-wrap">
        {
            filterConstructions?.map( (item, num) =>
                <>
                    <a href={item.slug ? item.slug : "#"} class={`construction-item ${ item.slug === slug && "active"}`}>
                        <Icon width="94" height="94" id={`Icon-${num + 1}-Unselected`} />
                        <Icon width="94" height="94" id={`Icon-${num + 1}-Hover`} />
                        <Icon width="94" height="94" id={`Icon-${num + 1}-Active`} />
                        <span set:html={item.label} />
                    </a>
                </>
            )
        }

    </div>
</section>

<style lang="scss" is:global>
        .constructions-switch-wrap {
        display: flex;
        flex-wrap: nowrap;
        gap: var(--global-gap);
        overflow-x: auto;

    }
    .construction-item {
        position: relative;
        display: flex;
        flex-direction: column;
        min-width: clamp(10rem, 9.5599rem + 1.8779vw, 11.25rem);
        width: clamp(10rem, 9.5599rem + 1.8779vw, 11.25rem);
        & span {
            flex: 1;
            background: var(--color-gray-1);
            color: var(--color-gray-3);
            padding: 1.5em;
            font-weight: 700;
            margin: -1.5em 0 0;
            z-index: 1;
            font-family: var(--font-family);
        }

        &:not(.active):hover span {
            background: var(--color-gray-4);
            color: var(--color-white);
        }

        &.active span {
            background: var(--color-orange);
            color: var(--color-white);
        }
        & a {
            text-decoration: none;
            &:hover {
                text-decoration: none;
            }
        }


    }
    .construction-item {

        & svg {
            width: clamp(5.14rem, 4.8812rem + 1.1042vw, 5.875rem);
            aspect-ratio: 1/1;
            margin: 0 0 0 1.4rem;
            z-index: 2;
            // opacity: .4;
            &:nth-child(2) {
                display: none;
            }
            &:nth-child(3) {
                display: none;
            }
            
        }

        &:hover {
            svg {
                &:nth-child(1), &:nth-child(3) {
                    display: none;
                }
                &:nth-child(2) {
                    display: block;
                }
            }
        }

        &:not(.active):hover svg {
            // opacity: .85;
        }

        &.active svg {
            &:nth-child(1), &:nth-child(2) {
                display: none;
            }
            &:nth-child(3) {
                display: block;
            }
        }


    }
</style>