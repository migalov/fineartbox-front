---
import Icon from "./Icon.astro";

const {id, packages, arrayImages} = Astro.props;

---
<section class="fab-ready-works splide" data-id={`construction-${id}`} hidden={id > 1 ? true : false}>
    <div class="fab-ready-works-row splide__track">
        <div class="splide__list">
            {
                packages?.map( project => 
                    <a class="splide__slide" href={project.href.replace("https://fineartbox.ru", "")}>
                        <img data-splide-lazy={project?.PreviewSourceImageArray[0]?.src} />
                    </a>
            
                )
            }
        </div>
    </div>
    <div class="splide__arrows splide__arrows--ltr">
    <button
        class="splide__arrow splide__arrow--prev"
        type="button"
        aria-label="Previous slide"
        aria-controls="splide01-track"
    >
        <Icon id="arrow-slider" width="20" height="40" />
    </button>
    <button
        class="splide__arrow splide__arrow--next"
        type="button"
        aria-label="Next slide"
        aria-controls="splide01-track"
    >
        <Icon id="arrow-slider" width="20" height="40" />
    </button>
    </div>
</section>

<style lang="scss" is:global>
    .fab-ready-works {
        width: 100%;
        & .splide__arrow {
            background: transparent;
            outline: none;
            border: none;
        }
    }
    .fab-ready-works-row {
        & img {
            aspect-ratio: 1/1;
            width: 100%;
        }


    }
</style>
<script src="../splide.min.js" is:inline></script>
<script src="./splide.min.js" is:inline></script>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll(".fab-ready-works").forEach( block => {
        let splide = new Splide(block, {
            arrows: true,
            autoplay: false,
            lazyLoad: "nearby",
            pagination: false,
            updateOnMove: !0,
            perPage: 4,
            breakpoints: {
                992: { perPage: 3, fixedWidth: 'clamp(12.5rem, 10.3571rem + 10.7143vw, 20rem)' },
                767: { perPage: 2 },
                540: { perPage: 1 }
            },
        });
        splide.mount();
    })
    
  });
</script>