---
const { title } = Astro.props;
import "./styles/global.scss";
import "./styles/fonts.scss";
import "./styles/grid.scss";
import Header from "./components/Header.astro";
import Footer from "./components/Footer.astro";
import Sprite from "./sprite.astro";
---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link rel="stylesheet" href="/splide.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/simple-scrollbar@latest/simple-scrollbar.css">
    <script src="https://cdn.jsdelivr.net/npm/simple-scrollbar@latest/simple-scrollbar.min.js"></script>
    <style lang="scss" is:global>
        
    body {
        --width-page: 1424px;
        --width-header: 14rem;
        --header-height: 84px;
        --global-template-columns: 1fr minmax(0, calc(var(--width-page) - var(--width-header))) var(--width-header) 1fr;
        display: flex;
        flex-direction: column;
        margin: 0;
        padding: var(--header-height) 0 0;
        @media (min-width: 768px) {
            padding: 2rem 0 0;
        }
    }
    .main {
        flex: 1;
        @media (min-width: 768px) {
            display: grid;
            grid-template-areas: ". c h .";
            grid-template-columns: var(--global-template-columns);

        }
    }
    .content-html-source {
        grid-area: c;
        margin-right: clamp(0rem, -1.714rem + 3.571vw, 1.5rem);
    }
    </style>
</head>
<body>
    
    <div class="main">
        <Header />
        <div class="content-html-source">
            <slot />
        </div>
    </div>
    <Footer />
    <!-- <Footer /> -->
    <Sprite />
    <script>
	const imageObserver = new IntersectionObserver(
		(entries, observer) => {
			entries.forEach((entry) => {
				if (entry.isIntersecting) {
					if(entry.target.hasAttribute("data-src")) {
						entry.target.src = entry.target.dataset.src;
						observer.unobserve(entry.target)
					}
					if(entry.target.hasAttribute("data-bg-src")) {
						entry.target.style.backgroundImage = `url('${entry.target.dataset.bgSrc}')`;
						observer.unobserve(entry.target);
					}
				}
			})
		},
		{
			rootMargin: "0px"
		}
	)
	document.querySelectorAll("div, img, a, iframe, li").forEach((image) => imageObserver.observe(image));
</script>

</body>
</html>